{"version":3,"file":"static/webpack/static/development/pages/permissions.js.36d52d454fd14fbcf1cc.hot-update.js","sources":["webpack:///./components/Permissions.js"],"sourcesContent":["import { Query, Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Error from './ErrorMessage';\nimport Table from './styles/Table';\nimport SickButton from './styles/SickButton';\n\nconst possiblePermissions = [\n  'ADMIN',\n  'USER',\n  'ITEMCREATE',\n  'ITEMUPDATE',\n  'ITEMDELETE',\n  'PERMISSIONUPDATE',\n];\nconst UPDATE_PERMISSIONS_MUTATION = gql`\n  mutation UPDATE_PERMISSIONS_MUTATION(\n    $permissions:[Permission],\n    $userId:ID!\n  ){\n    updatePermissions(permissions:$permissions,$userId:$userId){\n      id\n      permissions\n      name\n      email\n    }\n  }\n`;\n\nconst ALL_USERS_QUERY = gql`\n  query {\n    users {\n      id\n      name\n      email\n      permissions\n    }\n  }\n`;\n\nconst Permissions = () => (\n  <Query query={ALL_USERS_QUERY}>\n    {({ data, loading, error }) => (\n      <div>\n        <Error error={error} />\n        <div>\n          <h2>Manage Permissions</h2>\n          <Table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Email</th>\n                {possiblePermissions.map(permission => (\n                  <th key={permission}>{permission}</th>\n                ))}\n                <th>üëáüèº</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.users.map(user => (\n                <UserPermissions key={user.id} user={user} />\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    )}\n  </Query>\n);\nclass UserPermissions extends Component {\n  static propTypes = {\n    // proptypes.object.isrequired\n    user: PropTypes.shape({\n      name: PropTypes.string,\n      email: PropTypes.string,\n      id: PropTypes.string,\n      permissions: PropTypes.array,\n    }).isRequired,\n  };\n\n  state = {\n    permissions: this.props.user.permissions,\n  };\n\n  handlePermissionChange = e => {\n    const checkbox = e.target;\n    // Take a copy of the current permissions\n    // this.state.permissions without [] will give reference to the array not a copy of the array\n    let updatedPermissions = [...this.state.permissions];\n    // figure out if we need to remove or add this permission\n    if (checkbox.checked) {\n      // add it in!\n      updatedPermissions.push(checkbox.value);\n    } else {\n      updatedPermissions = updatedPermissions.filter(\n        permission => permission !== checkbox.value\n      );\n    }\n    this.setState({ permissions: updatedPermissions });\n    console.log(updatedPermissions);\n  };\n\n  render() {\n    const { user } = this.props;\n    return (\n      <Mutation\n        mutation={UPDATE_PERMISSIONS_MUTATION}\n        variables={{\n          permissions: this.state.permissions,\n          userId: this.state.user.id,\n        }}\n      >\n        {(updatePermissions, { loading, error }) => (\n          <>\n            {error && (\n              <tr>\n                <td colSpan=\"8\">\n                  <Error error={error} />\n                </td>\n              </tr>\n            )}\n            <tr>\n              <td>{user.name}</td>\n              <td>{user.email}</td>\n              {possiblePermissions.map(permission => (\n                <td key={permission}>\n                  <label htmlFor={`${user.id}-permission-${permission}`}>\n                    <input\n                      id={`${user.id}-permission-${permission}`}\n                      type=\"checkbox\"\n                      checked={this.state.permissions.includes(permission)}\n                      onChange={this.handlePermissionChange}\n                      value={permission}\n                    />\n                  </label>\n                </td>\n              ))}\n              <td>\n                <SickButton\n                  type=\"button\"\n                  disabled={loading}\n                  onClick={updatePermissions}\n                >\n                  Updat{loading ? 'ing' : 'e'}\n                </SickButton>\n              </td>\n            </tr>\n          </>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default Permissions;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAQA;AAcjBA;AAFA;AACA;AA4BA;;;;;;;;;;;;;;;;;;AAWA;AACA;AADA;AACA;AAGA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AADA;AAEA;AAEA;AACA;AACA;AACA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1BA;AAuCA;;;;AAlFA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AACA;AAmFA;;;;A","sourceRoot":""}